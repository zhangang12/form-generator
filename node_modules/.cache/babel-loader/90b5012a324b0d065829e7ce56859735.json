{"remainingRequest":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\湛港\\Desktop\\form-generator\\src\\views\\index\\home.vue?vue&type=template&id=07ce50d4","dependencies":[{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\src\\views\\index\\home.vue","mtime":1692714558647},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\babel.config.js","mtime":1692714559294},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692715147026},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\babel-loader\\lib\\index.js","mtime":1692715146967},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1692715135851},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692715147026},{"path":"C:\\Users\\湛港\\Desktop\\form-generator\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1692715135847}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKaW1wb3J0IF9pbXBvcnRzXzAgZnJvbSAnQC9hc3NldHMvbG9nby5wbmcnOwpjb25zdCBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogImxlZnQtaGVhZGVyIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICBzcmM6IF9pbXBvcnRzXzAsCiAgYWx0OiAibG9nbyIKfSksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIG51bGwsICJGb3JtIEdlbmVyYXRvciBBbnRkdiIpXSwgLTEgLyogSE9JU1RFRCAqLyk7CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJjZW50ZXItbWFpbiIKfTsKY29uc3QgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogImNlbnRlci1ib2FyZC1yb3ciCn07CmNvbnN0IF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYSIsIHsKICBocmVmOiAiaHR0cHM6Ly9naXRodWIuY29tL2Z1enVpL2Zvcm0tZ2VuZXJhdG9yLWFudGR2IiwKICB0YXJnZXQ6ICJfYmxhbmsiCn0sICJGb3JtIEdlbmVyYXRvciBBbnRkdiIsIC0xIC8qIEhPSVNURUQgKi8pOwpjb25zdCBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogIGlkOiAiY29weU5vZGUiLAogIHR5cGU6ICJoaWRkZW4iCn0sIG51bGwsIC0xIC8qIEhPSVNURUQgKi8pOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICBjb25zdCBfY29tcG9uZW50X2xlZnRfc2lkZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJsZWZ0LXNpZGUiKTsKICBjb25zdCBfY29tcG9uZW50X2FfbGF5b3V0X3NpZGVyID0gX3Jlc29sdmVDb21wb25lbnQoImEtbGF5b3V0LXNpZGVyIik7CiAgY29uc3QgX2NvbXBvbmVudF9jZW50ZXJfdG9wID0gX3Jlc29sdmVDb21wb25lbnQoImNlbnRlci10b3AiKTsKICBjb25zdCBfY29tcG9uZW50X2NlbnRlcl9zdGFnZSA9IF9yZXNvbHZlQ29tcG9uZW50KCJjZW50ZXItc3RhZ2UiKTsKICBjb25zdCBfY29tcG9uZW50X2FfbGF5b3V0X2NvbnRlbnQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiYS1sYXlvdXQtY29udGVudCIpOwogIGNvbnN0IF9jb21wb25lbnRfYV9sYXlvdXRfZm9vdGVyID0gX3Jlc29sdmVDb21wb25lbnQoImEtbGF5b3V0LWZvb3RlciIpOwogIGNvbnN0IF9jb21wb25lbnRfYV9sYXlvdXQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiYS1sYXlvdXQiKTsKICBjb25zdCBfY29tcG9uZW50X3JpZ2h0X3BhbmVsID0gX3Jlc29sdmVDb21wb25lbnQoInJpZ2h0LXBhbmVsIik7CiAgY29uc3QgX2NvbXBvbmVudF9jb2RlX3R5cGVfbW9kYWwgPSBfcmVzb2x2ZUNvbXBvbmVudCgiY29kZS10eXBlLW1vZGFsIik7CiAgY29uc3QgX2NvbXBvbmVudF9qc29uX2RyYXdlciA9IF9yZXNvbHZlQ29tcG9uZW50KCJqc29uLWRyYXdlciIpOwogIGNvbnN0IF9jb21wb25lbnRfZm9ybV9kcmF3ZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZm9ybS1kcmF3ZXIiKTsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0LCB7CiAgICBpZDogImNvbXBvbmVudHMtbGF5b3V0LWRlbW8tZml4ZWQtc2lkZXIiCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0X3NpZGVyLCB7CiAgICAgICJjb2xsYXBzZWQtd2lkdGgiOiAwLAogICAgICB3aWR0aDogMjUwLAogICAgICB0aGVtZTogImxpZ2h0IiwKICAgICAgc3R5bGU6IHsKICAgICAgICBvdmVyZmxvdzogJ2F1dG8nLAogICAgICAgIGhlaWdodDogJzEwMHZoJywKICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJywKICAgICAgICBsZWZ0OiAwCiAgICAgIH0KICAgIH0sIHsKICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19ob2lzdGVkXzEsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2xlZnRfc2lkZSwgewogICAgICAgIHJlZjogImxlZnRTbGlkZSIsCiAgICAgICAgb25BZGRDb21wb25lbnQ6ICRzZXR1cC5hZGRDb21wb25lbnQKICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgWyJvbkFkZENvbXBvbmVudCJdKV0pLAogICAgICBfOiAxIC8qIFNUQUJMRSAqLwogICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0LCB7CiAgICAgIHN0eWxlOiB7CiAgICAgICAgbWFyZ2luTGVmdDogJzI1MHB4JywKICAgICAgICBtYXJnaW5SaWdodDogJzM1MHB4JwogICAgICB9CiAgICB9LCB7CiAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9jZW50ZXJfdG9wLCB7CiAgICAgICAgb25DbGVhbkNvbXBvbmVudDogJHNldHVwLmNsZWFuQ29tcG9uZW50LAogICAgICAgIG9uU2hvd0pzb25EcmF3ZXI6ICRzZXR1cC5zaG93SnNvbkRyYXdlciwKICAgICAgICBvblNob3dDb2RlVHlwZU1vZGFsOiAkc2V0dXAuc2hvd0NvZGVUeXBlTW9kYWwKICAgICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgWyJvbkNsZWFuQ29tcG9uZW50IiwgIm9uU2hvd0pzb25EcmF3ZXIiLCAib25TaG93Q29kZVR5cGVNb2RhbCJdKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0X2NvbnRlbnQsIG51bGwsIHsKICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2NlbnRlcl9zdGFnZSwgewogICAgICAgICAgcmVmOiAic3RhZ2UiLAogICAgICAgICAgZm9ybVJ1bGU6IF9jdHguZm9ybVJ1bGUsCiAgICAgICAgICBhY3RpdmVJdGVtOiBfY3R4LmFjdGl2ZUl0ZW0sCiAgICAgICAgICBkcmF3aW5nTGlzdDogX2N0eC5kcmF3aW5nTGlzdCwKICAgICAgICAgIG9uQWRkQ29tcG9uZW50OiAkc2V0dXAuYWRkQ29tcG9uZW50LAogICAgICAgICAgb25Tb3J0Q29tcG9uZW50OiAkc2V0dXAuc29ydENvbXBvbmVudCwKICAgICAgICAgIG9uQ29weUNvbXBvbmVudDogJHNldHVwLmNvcHlDb21wb25lbnQsCiAgICAgICAgICBvbk1vdmVDb21wb25lbnQ6ICRzZXR1cC5tb3ZlQ29tcG9uZW50LAogICAgICAgICAgb25TZWxlY3RDb21wb25lbnQ6ICRzZXR1cC5zZWxlY3RDb21wb25lbnQsCiAgICAgICAgICBvbkRlbGV0ZUNvbXBvbmVudDogJHNldHVwLmRlbGV0ZUNvbXBvbmVudAogICAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFsiZm9ybVJ1bGUiLCAiYWN0aXZlSXRlbSIsICJkcmF3aW5nTGlzdCIsICJvbkFkZENvbXBvbmVudCIsICJvblNvcnRDb21wb25lbnQiLCAib25Db3B5Q29tcG9uZW50IiwgIm9uTW92ZUNvbXBvbmVudCIsICJvblNlbGVjdENvbXBvbmVudCIsICJvbkRlbGV0ZUNvbXBvbmVudCJdKV0pXSksCiAgICAgICAgXzogMSAvKiBTVEFCTEUgKi8KICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0X2Zvb3RlciwgewogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19jcmVhdGVUZXh0Vk5vZGUoIiDCqTIwMjIgIiksIF9ob2lzdGVkXzRdKSwKICAgICAgICBfOiAxIC8qIFNUQUJMRSAqLwogICAgICB9KV0pXSksCgogICAgICBfOiAxIC8qIFNUQUJMRSAqLwogICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2FfbGF5b3V0X3NpZGVyLCB7CiAgICAgIHN0eWxlOiB7CiAgICAgICAgb3ZlcmZsb3c6ICdhdXRvJywKICAgICAgICBoZWlnaHQ6ICcxMDB2aCcsCiAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsCiAgICAgICAgcmlnaHQ6IDAKICAgICAgfSwKICAgICAgImNvbGxhcHNlZC13aWR0aCI6IDAsCiAgICAgIHdpZHRoOiAzNTAsCiAgICAgIHRoZW1lOiAibGlnaHQiCiAgICB9LCB7CiAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9yaWdodF9wYW5lbCwgewogICAgICAgIGZvcm1SdWxlOiBfY3R4LmZvcm1SdWxlLAogICAgICAgIGFjdGl2ZUl0ZW06IF9jdHguYWN0aXZlSXRlbSwKICAgICAgICBvblVwZGF0ZUZvcm1SdWxlOiAkc2V0dXAudXBkYXRlRm9ybVJ1bGUsCiAgICAgICAgb25SZXBsYWNlQ29tcG9uZW50OiAkc2V0dXAucmVwbGFjZUNvbXBvbmVudCwKICAgICAgICBvblNob3dJY29uU2VsZWN0OiBfY3R4LnNob3dJY29uU2VsZWN0CiAgICAgIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFsiZm9ybVJ1bGUiLCAiYWN0aXZlSXRlbSIsICJvblVwZGF0ZUZvcm1SdWxlIiwgIm9uUmVwbGFjZUNvbXBvbmVudCIsICJvblNob3dJY29uU2VsZWN0Il0pXSksCiAgICAgIF86IDEgLyogU1RBQkxFICovCiAgICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfY29kZV90eXBlX21vZGFsLCB7CiAgICAgIHJlZjogImNvZGVUeXBlTW9kYWwiLAogICAgICBvbkNvbmZpcm06ICRzZXR1cC5jb2RlVHlwZU1vZGFsQ29uZmlybQogICAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgWyJvbkNvbmZpcm0iXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2pzb25fZHJhd2VyLCB7CiAgICAgIHJlZjogImpzb25EcmF3ZXIiLAogICAgICBvblVwZGF0ZUNvbmY6ICRzZXR1cC51cGRhdGVDb25mCiAgICB9LCBudWxsLCA4IC8qIFBST1BTICovLCBbIm9uVXBkYXRlQ29uZiJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZm9ybV9kcmF3ZXIsIHsKICAgICAgcmVmOiAiZm9ybURyYXdlciIKICAgIH0sIG51bGwsIDUxMiAvKiBORUVEX1BBVENIICovKV0pLAoKICAgIF86IDEgLyogU1RBQkxFICovCiAgfSksIF9ob2lzdGVkXzVdLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pOwp9"},{"version":3,"names":["_imports_0","_createElementVNode","class","src","alt","href","target","id","type","_createVNode","_component_a_layout","_component_a_layout_sider","width","theme","style","overflow","height","position","left","_hoisted_1","_component_left_side","ref","onAddComponent","$setup","addComponent","marginLeft","marginRight","_component_center_top","onCleanComponent","cleanComponent","onShowJsonDrawer","showJsonDrawer","onShowCodeTypeModal","showCodeTypeModal","_hoisted_2","_component_a_layout_content","_hoisted_3","_component_center_stage","formRule","_ctx","activeItem","drawingList","onSortComponent","sortComponent","onCopyComponent","copyComponent","onMoveComponent","moveComponent","onSelectComponent","selectComponent","onDeleteComponent","deleteComponent","_component_a_layout_footer","textAlign","_hoisted_4","right","_component_right_panel","onUpdateFormRule","updateFormRule","onReplaceComponent","replaceComponent","onShowIconSelect","showIconSelect","_component_code_type_modal","onConfirm","codeTypeModalConfirm","_component_json_drawer","onUpdateConf","updateConf","_component_form_drawer","_hoisted_5"],"sources":["C:\\Users\\湛港\\Desktop\\form-generator\\src\\views\\index\\home.vue"],"sourcesContent":["<template>\n    <a-layout id=\"components-layout-demo-fixed-sider\">\n        <a-layout-sider\n            :collapsed-width=\"0\"\n            :width=\"250\"\n            theme=\"light\"\n            :style=\"{ overflow: 'auto', height: '100vh', position: 'fixed', left: 0 }\"\n        >\n            <div class=\"left-header\">\n                <img src=\"~@/assets/logo.png\" alt=\"logo\">\n                <h3>Form Generator Antdv</h3>\n            </div>\n            <left-side \n                ref=\"leftSlide\"\n                @addComponent=\"addComponent\"\n            ></left-side>\n        </a-layout-sider>\n        <a-layout :style=\"{ marginLeft: '250px', marginRight: '350px' }\">\n            <center-top \n                @cleanComponent=\"cleanComponent\"\n                @showJsonDrawer=\"showJsonDrawer\"\n                @showCodeTypeModal=\"showCodeTypeModal\"\n            ></center-top>\n            <div class=\"center-main\">\n                <a-layout-content>\n                    <div class=\"center-board-row\">\n                        <center-stage\n                            ref=\"stage\"\n                            :formRule=\"formRule\"\n                            :activeItem=\"activeItem\"\n                            :drawingList=\"drawingList\"\n                            @addComponent=\"addComponent\"\n                            @sortComponent=\"sortComponent\"\n                            @copyComponent=\"copyComponent\"\n                            @moveComponent=\"moveComponent\"\n                            @selectComponent=\"selectComponent\"\n                            @deleteComponent=\"deleteComponent\"\n                        ></center-stage>\n                    </div>\n                    \n                </a-layout-content>\n                <a-layout-footer :style=\"{ textAlign: 'center' }\">\n                    ©2022 <a href=\"https://github.com/fuzui/form-generator-antdv\" target=\"_blank\">Form Generator Antdv</a>\n                </a-layout-footer>\n            </div>\n        </a-layout>\n        <a-layout-sider\n            :style=\"{ overflow: 'auto', height: '100vh', position: 'fixed', right: 0 }\"\n            :collapsed-width=\"0\"\n            :width=\"350\"\n            theme=\"light\"\n        >\n            <right-panel \n                :formRule=\"formRule\"\n                :activeItem=\"activeItem\"\n                @updateFormRule=\"updateFormRule\"\n                @replaceComponent=\"replaceComponent\"\n                @showIconSelect=\"showIconSelect\"\n            />\n        </a-layout-sider>\n        <code-type-modal ref=\"codeTypeModal\" @confirm=\"codeTypeModalConfirm\" />\n        <json-drawer ref=\"jsonDrawer\" @updateConf=\"updateConf\" />\n        <form-drawer ref=\"formDrawer\" />\n    </a-layout>\n    <input id=\"copyNode\" type=\"hidden\">\n</template>\n<script>\nimport leftSide from '@/component/leftSide'\nimport centerTop from '@/component/centerTop'\nimport centerStage from '@/component/centerStage'\nimport rightPanel from '@/component/rightPanel'\nimport formDrawer from '@/component/FormDrawer'\nimport codeTypeModal from '@/component/codeTypeModal'\nimport ClipboardJS from 'clipboard'\nimport { saveAs } from 'file-saver'\nimport { FormRule } from '@/core/config'\nimport JsonDrawer from '@/component/jsonDrawer'\n\nimport { reactive, toRefs, watch, getCurrentInstance, provide, onMounted } from 'vue'\nimport { deepClone, rendomKey } from '@/utils/index'\nexport default {\n    components: {\n        leftSide,\n        centerTop,\n        centerStage,\n        rightPanel,\n        codeTypeModal,\n        formDrawer,\n        JsonDrawer,\n    },\n    setup(props, context){\n\n        const { proxy } = getCurrentInstance()\n\n        const preAction = (() => {\n            let fn = null\n            return {\n                set(f){ fn = f },\n                get(){\n                    let result = fn()\n                    fn = null\n                    return result\n                }\n            }\n        })()\n\n        provide('preAction', preAction)\n        \n        const data = reactive({\n            formId: 99,\n            formRule: FormRule,\n            activeItem: undefined,\n            drawingList: [],\n            action: null,\n            codeTypeData: null\n        })\n\n        const updateFormId = (clone) => {\n            data.formId++\n            clone.formId = data.formId\n            return clone \n        }\n\n        const international = (clone) => {\n            if(clone.__config__){\n                if(clone.__config__.label){\n                    clone.__config__.label = proxy.$t(clone.__config__.label)\n                }\n                if(clone.__config__.document){\n                    clone.__config__.document = proxy.$t(clone.__config__.document)\n                }\n            }\n            if(clone.placeholder){\n                if(Array.isArray(clone.placeholder)){\n                    clone.placeholder.forEach(p => {\n                        proxy.$t(p)\n                    })\n                }else{\n                    clone.placeholder = proxy.$t(clone.placeholder)\n                }\n            }\n            if(clone.__config__.tag === 'a-button'){\n                clone.__slot__.default = proxy.$t(clone.__slot__.default)\n            }\n            if(clone.__config__.tag === 'a-upload'){\n                clone.__config__.buttonText = proxy.$t(clone.__config__.buttonText)\n            }\n        }\n\n        const transfer = clone => {\n            if(clone.__config__.layout == 'colFormItem'){\n                clone.__vModel__ = `field${clone.formId}`\n            }else if(clone.__config__.layout == 'rowFormItem'){\n                clone.componentName = `row${clone.formId}`\n                delete clone.label\n                if(!Array.isArray(clone.children)){\n                    clone.children = []\n                }else{\n                    clone.children = clone.children.map(item => transfer(item))\n                }\n            }\n        }\n\n        const adjustConfig = (options, keepId) => {\n            let clone = deepClone(options)\n            clone.id = rendomKey()\n            updateFormId(clone, keepId)\n            international(clone)\n            transfer(clone)\n            return clone\n        }\n\n        const addComponent = (options = {}) => {\n            let item = preAction.get()\n            item = adjustConfig(item)\n            let { origin = data.drawingList, index } = options\n            if(index !== undefined){\n                origin.splice(index, 0, item)\n            }else{\n                origin.push(item)\n            }\n            data.activeItem = item\n        }\n\n        const selectComponent = (options) => {\n            let { item } = options\n            data.activeItem = item\n        }\n\n        const dropComponent = (options) => {\n            let item = preAction.get()\n            item = adjustConfig(item)\n            let { origin = data.drawingList, index = 0 } = options\n            origin.splice(index, 0, item)\n        }\n\n        const sortComponent = (options) => {\n            let { origin = data.drawingList, oldIndex, newIndex } = options\n            let [item] = origin.splice(oldIndex, 1)\n            origin.splice(newIndex, 0, item)\n        }\n\n        const copyComponent = (options) => {\n            let item = adjustConfig(options.item)\n            data.drawingList.push(item)\n        }\n\n        const deleteComponent = (options) => {\n            let origin\n            let { formId } = options.item\n            let find = (source, formId ,parent) => {\n                return source.find((value, index, arr) => {\n                    if(value.formId == formId){\n                        origin = parent || source\n                        return arr.splice(index, 1)\n                    }\n\n                    if(Array.isArray(value.children)){\n                        return find(value.children, formId, value)\n                    }\n                })\n            }\n            find(data.drawingList, formId)\n            if(formId == data.activeItem.formId){\n                if(Array.isArray(origin)){\n                    if(origin.length){\n                        data.activeItem = origin[origin.length - 1]\n                    }else{\n                        data.activeItem = undefined\n                    }\n                }else if(Array.isArray(origin.children)){\n                    if(origin.children.length){\n                        data.activeItem = origin.children[origin.children.length - 1]\n                    }else{\n                        data.activeItem = origin\n                    }\n                }\n            }\n        }\n\n        const replaceComponent = (options) => {\n            let { item } = options\n            let {formId} = data.activeItem\n            item = adjustConfig(item)\n            let find = (source, id) => {\n                return source.find((value,index) => {\n                    if(value.formId == id){\n                        source.splice(index, 1, item)\n                        return true\n                    }\n\n                    if(Array.isArray(value.children)){\n                        return find(value.children, id)\n                    }\n                })\n            }\n            find(data.drawingList, formId)\n            data.activeItem = item\n        }\n\n        const moveComponent = (options) => {\n            let item = preAction.get()\n            let { origin = data.drawingList, index } = options\n            origin.splice(index, 0, item)\n        }\n\n        const updateFormRule = (options) => {\n            data.formRule = options\n        }\n\n        const updateConf = (options) => {\n            let { fields, formRule } = options\n            data.drawingList = fields\n            updateFormRule(formRule)\n        }\n\n        const cleanComponent = () => {\n            data.drawingList = []\n            data.activeItem = undefined\n        }\n\n        const showJsonDrawer = () => {\n            proxy.$refs.jsonDrawer.open(data.drawingList, data.formRule)\n        }\n\n        const showCodeTypeModal = (action, isFile) => {\n            data.action = action\n            proxy.$refs.codeTypeModal.onOpen(isFile)\n        }\n\n        const codeTypeModalConfirm = (codeTypeData) => {\n            data.codeTypeData = codeTypeData\n            let opt = deepClone({\n                formRule: data.formRule,\n                fields: data.drawingList,\n            })\n\n            if(data.action == 'run'){\n                proxy.$refs.formDrawer.onOpen(opt, codeTypeData)\n            }\n\n            if(data.action == 'copy'){\n                document.getElementById('copyNode').click()\n            }\n\n            if(data.action == 'download'){\n                \n                let { fileName } = codeTypeData\n                let codeStr = proxy.$refs.formDrawer.generateCode(opt, codeTypeData, true)\n                let blob = new Blob([\n                    `${codeStr.btfHtmlCode}<script setup>\\n${codeStr.btfJsCode}<\\/script>\\n<style>\\n${codeStr.bftCssCode}<style>`\n                ], { type: 'text/plain;charset=utf-8' })\n                saveAs(blob, fileName)\n            }\n        }\n\n        onMounted(() => {\n            const clipboard = new ClipboardJS('#copyNode', {\n                text: trigger => {\n                    let opt = deepClone({\n                        formRule: data.formRule,\n                        fields: data.drawingList,\n                    })\n                    const codeStr = proxy.$refs.formDrawer.generateCode(opt, data.codeTypeData, true)\n                    proxy.$notification.success({\n                    message: proxy.$t('base.successfully'),\n                    description:\n                        proxy.$t('base.code.copy.successfully')\n                    })\n                    return `${codeStr.btfHtmlCode}<script setup>\\n${codeStr.btfJsCode}<\\/script>\\n<style>\\n${codeStr.bftCssCode}<style>`\n                }\n            })\n            clipboard.on('error', e => {\n                proxy.$message.error(proxy.$t('base.code.copy.failed'))\n            })\n        })\n\n        return {\n            addComponent,\n            dropComponent,\n            sortComponent,\n            copyComponent,\n            deleteComponent,\n            replaceComponent,\n            moveComponent,\n            selectComponent,\n            cleanComponent,\n            updateFormRule,\n            showJsonDrawer,\n            showCodeTypeModal,\n            codeTypeModalConfirm,\n            updateConf,\n            ...toRefs(data)\n        }\n    }\n}\n</script>\n<style lang='scss'>\n@import '@/styles/home';\n</style>"],"mappings":"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"}]}